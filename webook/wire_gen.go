// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"learn_go/webook/internal/event/article"
	"learn_go/webook/internal/repository"
	article2 "learn_go/webook/internal/repository/article"
	"learn_go/webook/internal/repository/cache"
	"learn_go/webook/internal/repository/dao"
	"learn_go/webook/internal/service"
	"learn_go/webook/internal/web"
	"learn_go/webook/ioc"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitApp(templateId string) *App {
	loggerV2 := ioc.NewLogger()
	cmdable := ioc.NewRedis(loggerV2)
	jwtHandler := web.NewJWTHandler(cmdable)
	v := ioc.InitMiddlewares(jwtHandler, loggerV2)
	smsService := ioc.InitSMSService()
	codeCache := cache.NewCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	codeService := service.NewCodeService(templateId, smsService, codeRepository)
	smsHandler := web.NewSMSHandler(codeService)
	db := ioc.NewDB(loggerV2)
	userDao := dao.NewUserDao(db)
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewUserRepository(userDao, userCache)
	userService := service.NewUserService(userRepository, loggerV2)
	userHandler := web.NewUserHandler(userService, codeService, jwtHandler)
	oAuth2Service := ioc.InitOAuth2Service()
	oAuth2WechatHandler := web.NewOAuth2WechatHandler(oAuth2Service, userService, jwtHandler)
	testHandler := web.NewTestHandler(loggerV2)
	engine := ioc.InitGin(v, smsHandler, userHandler, oAuth2WechatHandler, testHandler)
	config := ioc.NewSaramaConfig()
	client := ioc.NewConsumerClient(config)
	interactionDao := dao.NewInteractionDao(db)
	interactionCache := cache.NewInteractionCache(cmdable)
	interactionRepository := repository.NewInteractionRepository(interactionDao, interactionCache)
	batchReadEventConsumer := article.NewBatchReadEventConsumer(client, interactionRepository, loggerV2)
	v2 := ioc.NewConsumers(batchReadEventConsumer)
	app := &App{
		server:    engine,
		consumers: v2,
	}
	return app
}

// wire.go:

var (
	providers = wire.NewSet(ioc.NewLogger, ioc.NewDB, ioc.NewRedis, ioc.InitMiddlewares, ioc.InitGin, ioc.InitSMSService, ioc.InitOAuth2Service, ioc.NewSaramaConfig, ioc.NewConsumerClient, article.NewBatchReadEventConsumer, ioc.NewConsumers, ioc.NewSyncProducer, article.NewSyncProducer, web.NewSMSHandler, web.NewUserHandler, web.NewOAuth2WechatHandler, web.NewJWTHandler, web.NewArticleHandler, web.NewTestHandler, service.NewCodeService, service.NewUserService, service.NewArticleService, service.NewInteractionService, repository.NewInteractionRepository, repository.NewCodeRepository, repository.NewUserRepository, article2.NewArticleRepository, article2.NewArticleReaderRepository, article2.NewArticleAuthorRepository, dao.NewUserDao, dao.NewInteractionDao, dao.NewArticleDao, cache.NewArticleCache, cache.NewCodeCache, cache.NewUserCache, cache.NewInteractionCache, wire.Struct(new(App), "*"))
)
